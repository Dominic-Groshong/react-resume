{"version":3,"sources":["containers/Header.js","components/JobsComponent.js","components/SchoolsComponent.js","components/SkillsComponent.js","containers/Content.js","containers/Footer.js","containers/Layout.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","React","Component","Jobs","props","state","jobs","axios","get","API_URL","then","res","data","map","j","i","key","value","company_name","job_title","location","start_date","end_date","current","dangerouslySetInnerHTML","__html","job_discription","setState","this","getData","Schools","schools","degree","school_name","major","Skills","skills","skills_title","details","Content","Footer","rel","target","Layout","Fragment","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c8bdde23.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <section className=\"container clearfix\">\r\n                    <div className=\"contact-info \">\r\n                        <h1>Dominic Groshong</h1>\r\n                        <p><a href=\"mailto:&#103;&#114;&#111;&#115;&#104;&#111;&#110;&#100;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;\">&#103;&#114;&#111;&#115;&#104;&#111;&#110;&#100;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;</a></p>\r\n                        <p><a href=\"tel:&#053;&#048;&#051;&#053;&#054;&#057;&#050;&#050;&#048;&#054;\">&#053;&#048;&#051;.&#053;&#054;&#057;.&#050;&#050;&#048;&#054;</a></p>\r\n                    </div>\r\n                </section>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { API_URL } from 'constants/index';\r\nimport axios from 'axios'\r\n\r\nclass Jobs extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            jobs: []\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        const newURL = API_URL + 'pages/4/?format=json';\r\n\r\n        // axios.get(newURL).then((repos) => {\r\n        //     const data = repos.data;\r\n        //     console.log('This is your data', data);\r\n        // });\r\n\r\n        axios\r\n            .get(newURL)\r\n            .then(res => {\r\n                const data = res.data\r\n\r\n                const jobs = data.jobs.map((j, i) => (\r\n                    <div className=\"job\" key={i}>\r\n                        <h3>{j.value.company_name}</h3>\r\n                        <p className=\"jtitle\">{j.value.job_title}</p>\r\n                        <p>{j.value.location}<br />\r\n                            {j.value.start_date} - {j.value.end_date}</p>\r\n                        <p>{j.value.current}</p>\r\n                        <span dangerouslySetInnerHTML={{ __html: j.value.job_discription }}></span>\r\n                    </div>\r\n                ))\r\n\r\n                this.setState({\r\n                    jobs\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"job-list\">\r\n                <h2>Previous Experience</h2>\r\n                {this.state.jobs}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Jobs;\r\n","import React from 'react';\r\nimport { API_URL } from 'constants/index';\r\nimport axios from 'axios'\r\n\r\nclass Schools extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            schools: []\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        const newURL = API_URL + 'pages/4/?format=json';\r\n\r\n        // axios.get(newURL).then((repos) => {\r\n        //     const data = repos.data;\r\n        //     console.log('This is your data', data);\r\n        // });\r\n\r\n        axios\r\n            .get(newURL)\r\n            .then(res => {\r\n                const data = res.data\r\n\r\n                const schools = data.schools.map((j, i) => (\r\n                    <div className=\"school\" key={i}>\r\n                        <h3>{j.value.degree}</h3>\r\n                        <p>{j.value.school_name} - {j.value.location}<br />\r\n                            {j.value.start_date} - {j.value.end_date}</p>\r\n                        <p><strong>Field of study:</strong> {j.value.major}</p>\r\n                    </div>\r\n                ))\r\n\r\n                this.setState({\r\n                    schools\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"schools-list\">\r\n                <h2>Education</h2>\r\n                {this.state.schools}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Schools;\r\n","import React from 'react';\r\nimport { API_URL } from 'constants/index';\r\nimport axios from 'axios'\r\n\r\nclass Skills extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            skills: []\r\n        };\r\n    }\r\n\r\n    getData() {\r\n        const newURL = API_URL + 'pages/4/?format=json';\r\n\r\n        // axios.get(newURL).then((repos) => {\r\n        //     const data = repos.data;\r\n        //     console.log('This is your data', data);\r\n        // });\r\n\r\n        axios\r\n            .get(newURL)\r\n            .then(res => {\r\n                const data = res.data\r\n\r\n                const skills = data.skills.map((j, i) => (\r\n                    <div className=\"skill\" key={i}>\r\n                        <h3>{j.value.skills_title}</h3>\r\n                        <span dangerouslySetInnerHTML={{ __html: j.value.details }}></span>\r\n                    </div>\r\n                ))\r\n\r\n                this.setState({\r\n                    skills\r\n                })\r\n            })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"skills-list\">\r\n                <h2>Skills</h2>\r\n                {this.state.skills}\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\n\r\nimport Jobs from '../components/JobsComponent';\r\nimport Schools from '../components/SchoolsComponent';\r\nimport Skills from '../components/SkillsComponent';\r\n\r\n\r\nclass Content extends React.Component {\r\n    render() {\r\n        return (\r\n            <section className=\"container\">\r\n                <section className=\"row\">\r\n                    <section className=\"col-md-6\">\r\n                        <Jobs />\r\n                    </section >\r\n                    <section className=\"col-md-6\">\r\n                        <Schools />\r\n                        <Skills />\r\n                    </section>\r\n                </section>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;\r\n","import React from 'react';\r\n\r\nclass Footer extends React.Component {\r\n    render() {\r\n        return (\r\n            <footer>\r\n                <section className=\"container\">\r\n                    <p>Â©2020 Dominic Groshong |  All rights reserved  | For more information email me at <a href=\"mailto:&#103;&#114;&#111;&#115;&#104;&#111;&#110;&#100;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;\">&#103;&#114;&#111;&#115;&#104;&#111;&#110;&#100;&#064;&#103;&#109;&#097;&#105;&#108;&#046;&#099;&#111;&#109;</a> </p>\r\n                    <p>This site is on GitHub Pages via <a href=\"https://reactjs.org/\" rel=\"noopener noreferrer\" target=\"_blank\">React.js</a>, and being served content via a REST API on a <a href=\"https://www.djangoproject.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Django</a> framework hosted by <a href=\"http://pythonanywhere.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Python Anywhere</a>.</p>\r\n                </section>\r\n            </footer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nimport Header from 'containers/Header';\r\nimport Content from 'containers/Content';\r\nimport Footer from 'containers/Footer';\r\n\r\nclass Layout extends React.Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Header />\r\n                <main>\r\n                    <Content />\r\n                </main>\r\n                <Footer />\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout;\r\n","import React from 'react';\n// import logo from './logo.svg';\nimport 'styles/css/styles.css';\n\nimport Layout from 'containers/Layout';\n\nfunction App() {\n  return (\n    <Layout />\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}